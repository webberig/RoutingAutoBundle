cmf_routing:
    chain:
        routers_by_id:
            cmf_routing.dynamic_router: 20
            router.default: 100
    dynamic:
        enabled: true
        controllers_by_type:
            demo_alias: test.controller:aliasAction
        controllers_by_class:
            Symfony\Cmf\Bundle\RoutingBundle\Doctrine\Phpcr\RedirectRoute:  cmf_routing.redirect_controller:redirectAction
        persistence:
            phpcr:
                enabled: true
                route_basepath: /test/routing

cmf_routing_auto:
    mappings:
        # e.g. /cms/auto-route/blog/my-blogs-title
        Symfony\Cmf\Bundle\RoutingAutoBundle\Tests\Resources\Document\Blog:
            # generate or use path components leading up to the final part of the path
            content_path:
                path_units:
                    base:
                        provider: [ specified, { path: test/auto-route } ]
                        exists_action: use
                        not_exists_action: create
                    namespace:
                        provider: [ specified, { path: blog } ]
                        exists_action: use
                        not_exists_action: create
            # using alternative syntax
            content_name:
                provider: 
                    name: content_method
                    options: 
                        method: getTitle
                exists_action: 
                    strategy: auto_increment
                    options:
                        pattern: -%d
                not_exists_action:
                    strategy: create
        # e.g. /cms/auto-route/blog/my-blogs-title/2013-04-09/my-post-title
        Symfony\Cmf\Bundle\RoutingAutoBundle\Tests\Resources\Document\Post:
            content_path:
                path_units:
                    # /cms/auto-route/blog/my-blogs-title
                    blog_path:
                        provider: [ content_object, { method: getBlog } ]
                        exists_action: use
                        not_exists_action: throw_exception
                    date:
                        provider:
                            name: content_datetime
                            options:
                                method: getDate
                                date_format: Y/m/d
                        exists_action: use
                        not_exists_action: create
            content_name:
                # my-post-title
                provider: [ content_method, { method: getTitle } ]
                exists_action: [ auto_increment, { pattern: -%d } ]
                not_exists_action: [ create ]

        # Article document for multilang tests
        Symfony\Cmf\Bundle\RoutingAutoBundle\Tests\Resources\Document\Article:

            content_path:
                path_units:
                    base:
                        provider: [ specified, { path: test/auto-route/articles } ]
                        exists_action: use
                        not_exists_action: create
                    locale:
                        provider: [ locale ]
                        exists_action: use
                        not_exists_action: create
            content_name:
                provider: [ content_method, { method: getTitle } ]
                exists_action: [ auto_increment, { pattern: -%d } ]
                not_exists_action: create

        # AbstractContent for ensuring that parent class mapping works
        Symfony\Cmf\Bundle\RoutingAutoBundle\Tests\Resources\Document\AbstractContent:

            content_path:
                path_units:
                    base:
                        provider: [ specified, { path: test/auto-route/articles } ]
                        exists_action: use
                        not_exists_action: create
            content_name:
                provider: [ content_method, { method: getTitle } ]
                exists_action: [ auto_increment, { pattern: -%d } ]
                not_exists_action: create
